package com.example.michaelcolomb.clipscroller;

import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.app.Fragment;
import android.support.v7.app.AppCompatActivity;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.VideoView;

import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.storage.FileDownloadTask;
import com.google.firebase.storage.FirebaseStorage;
import com.google.firebase.storage.StorageReference;
import com.google.firebase.storage.UploadTask;

/**
 * Created by MichaelColomb on 4/21/17.
 */

public class SubmissionActivity extends AppCompatActivity {


    private static final int MEDIA_CODE = 2;
    protected static final String VIDEO_FILTER = "video/*";
    protected static final String VIDEO_DIRECTORY = "video/";

    private EditText mEditTitleView;
    private View clipFragmentView;
    private ClipFragment clipFragment;
    private TextView preview;

    private Uri clipData;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_submission);

        mEditTitleView = (EditText) findViewById(R.id.title);
        clipFragmentView = findViewById(R.id.clip_list_fragment);
        clipFragment = (ClipFragment) getFragmentManager().findFragmentById(R.id.clip_list_fragment);
        preview = (TextView) findViewById(R.id.preview);

        clipFragmentView.setVisibility(View.INVISIBLE);
        preview.setVisibility(View.INVISIBLE);


        mEditTitleView.addTextChangedListener(new TextWatcher() {
            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                clipFragment.setTitle(mEditTitleView.getText().toString());
            }

            @Override
            public void afterTextChanged(Editable s) {}
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) { }
        });
    }

    /**
     * Ask the user for a video to store. A new window will be launched for the user
     * to choose from their media gallery, or other location of their choosing.
     * http://stackoverflow.com/questions/4922037/android-let-user-pick-image-or-video-from-gallery
     *
     * @param view
     */
    public void retrieveMedia(View view) {
        Intent pickIntent = new Intent();
        pickIntent.setAction(Intent.ACTION_GET_CONTENT);
        pickIntent.setType(VIDEO_FILTER);
        Intent videoIntent = Intent.createChooser(pickIntent, getString(R.string.pickVideo));
        startActivityForResult(videoIntent, MEDIA_CODE);
    }

    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (resultCode == RESULT_OK && requestCode == MEDIA_CODE) {
            clipData = data.getData();
            clipFragment.setVideo(clipData);
            clipFragmentView.setVisibility(View.VISIBLE);
            preview.setVisibility(View.VISIBLE);
        }
    }

    public void submit(View view) {

        final String title = mEditTitleView.getText().toString();

        final Context context = this;

        StorageReference videoStorageRef = FirebaseStorage.getInstance().getReference();
        StorageReference videoRef = videoStorageRef.child(VIDEO_DIRECTORY + title);

        videoRef.putFile(clipData)
                .addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
                    @Override
                    public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {
                        // Get a URL to the uploaded content
                        String downloadUrl = taskSnapshot.getDownloadUrl().toString();
                        Clip addedClip = new Clip(title, downloadUrl);

                        FirebaseDatabase mDatabase = FirebaseDatabase.getInstance();
                        DatabaseReference mEntriesReference = mDatabase.getReference(MainActivity.CLIP_ADDRESS);

                        mEntriesReference.push().setValue(addedClip);
                    }
                })
                .addOnFailureListener(new OnFailureListener() {
                    @Override
                    public void onFailure(@NonNull Exception exception) {
                        Toast.makeText(context, getString(R.string.failedToProcessVideo),
                                Toast.LENGTH_LONG).show();
                    }
                });

        Toast.makeText(context, "Uploaded", Toast.LENGTH_LONG).show();
        finish();
    }

    public static class ClipFragment extends Fragment {

        public static TextView clipTitle;
        public static VideoView clipVideo;

        @Override
        public View onCreateView(LayoutInflater inflater, ViewGroup container,
                                 Bundle savedInstanceState) {
            final View view = inflater.inflate(R.layout.clip_list_item, container, false);

            clipTitle = (TextView) view.findViewById(R.id.clip_list_title);
            clipVideo = (VideoView) view.findViewById(R.id.clip);

            return view;
        }

        public void setTitle(String title) {
            clipTitle.setText(title);
        }

        public void setVideo(Uri uri) {
            clipVideo.setVideoURI(uri);
            clipVideo.setOnTouchListener(new ClipPlayer.ClipTouchListener());
        }
    }

    public void cancel(View view) {
        finish();
    }
}
